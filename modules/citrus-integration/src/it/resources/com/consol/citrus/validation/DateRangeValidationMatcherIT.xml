<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:http="http://www.citrusframework.org/schema/http/testcase"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                                  http://www.citrusframework.org/schema/testcase http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd
                                  http://www.citrusframework.org/schema/http/testcase http://www.citrusframework.org/schema/http/testcase/citrus-http-testcase.xsd">
  <testcase name="DateRangeValidationMatcherIT">
    <meta-info>
      <author>Martin Maher</author>
      <creationdate>2015-12-14</creationdate>
      <status>FINAL</status>
      <last-updated-by>Martin Maher</last-updated-by>
      <last-updated-on>2015-12-14T00:00:00</last-updated-on>
    </meta-info>

    <description>
      Tests the @dateRange()@ validator
    </description>

    <variables>
      <variable name="withinRangeTimestamp" value="2015-01-31"/>
      <variable name="outsideRangeTimestamp" value="2015-01-28"/>
      <variable name="rangeFrom" value="2015-01-30"/>
      <variable name="rangeTo" value="2015-02-01"/>
    </variables>

    <actions>
      <parallel>
        <http:send-request client="httpClient">
          <http:POST>
            <http:headers content-type="application/xml" accept="application/xml"/>
            <http:body>
              <http:data>
                <![CDATA[
                    <testRequestMessage>
                        <timestamp>${withinRangeTimestamp}</timestamp>
                    </testRequestMessage>
                ]]>
              </http:data>
            </http:body>
          </http:POST>
        </http:send-request>

        <sequential>
          <http:receive-request server="httpServerRequestEndpoint">
            <http:POST path="/test">
              <http:headers content-type="application/xml" accept="application/xml">
                <http:header name="Authorization" value="Basic c29tZVVzZXJuYW1lOnNvbWVQYXNzd29yZA=="/>
              </http:headers>
              <http:body>
                <http:data>
                  <![CDATA[
                    <testRequestMessage>
                        <timestamp>@dateRange('${rangeFrom}','${rangeTo}')@</timestamp>
                    </testRequestMessage>
                  ]]>
                </http:data>
              </http:body>
            </http:POST>
            <http:extract>
              <http:header name="citrus_jms_messageId" variable="correlation_id"/>
            </http:extract>
          </http:receive-request>

          <http:send-response server="httpServerResponseEndpoint">
            <http:headers status="200" reason-phrase="OK" version="HTTP/1.1">
              <http:header name="Content-Type" value="application/xml"/>
              <http:header name="citrus_jms_correlationId" value="${correlation_id}"/>
            </http:headers>
            <http:body>
              <http:data>
                <![CDATA[
                  <testResponseMessage>
                    <timestamp>${outsideRangeTimestamp}</timestamp>
                  </testResponseMessage>
                ]]>
              </http:data>
            </http:body>
          </http:send-response>
        </sequential>
      </parallel>

      <assert exception="com.consol.citrus.exceptions.ValidationException" message="DateRangeValidationMatcher failed for field 'timestamp'. Date '${outsideRangeTimestamp}' not in range: ${rangeFrom} - ${rangeTo}">
        <when>
          <http:receive-response client="httpClient">
            <http:headers status="200" reason-phrase="OK" version="HTTP/1.1"/>
            <http:body>
              <http:data>
                <![CDATA[
                  <testResponseMessage>
                    <timestamp>@dateRange('${rangeFrom}','${rangeTo}')@</timestamp>
                  </testResponseMessage>
                ]]>
              </http:data>
            </http:body>
          </http:receive-response>
        </when>
      </assert>
    </actions>
  </testcase>
</spring:beans>