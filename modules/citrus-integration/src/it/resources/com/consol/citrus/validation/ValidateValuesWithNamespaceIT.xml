<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.citrusframework.org/schema/testcase http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">
    <testcase name="ValidateValuesWithNamespaceIT">
        <meta-info>
          <author>Christoph Deppisch</author>
          <creationdate>2009-06-24</creationdate>
          <status>FINAL</status>
          <last-updated-by>Christoph Deppisch</last-updated-by>
          <last-updated-on>2008-06-24T00:00:00</last-updated-on>
        </meta-info>
		
        <variables>
            <variable name="correlationId" value="citrus:randomNumber(10)"></variable>      
            <variable name="messageId" value="citrus:randomNumber(10)"></variable>
            <variable name="user" value="Christoph"></variable>
        </variables>

        <actions>
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="//ns0:HelloResponse/ns0:MessageId" value="${messageId}"/>
                        <xpath expression="//ns0:HelloResponse/ns0:CorrelationId" value="${correlationId}"/>
                        <xpath expression="//ns0:HelloResponse/ns0:Text" value="citrus:concat('Hello ', ${user})"/>
                    </validate>
                    <namespace prefix="ns0" value="http://www.consol.de/schemas/samples/sayHello.xsd"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>
            
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="//ns1:HelloResponse/ns1:MessageId" value="${messageId}"/>
                        <xpath expression="//ns1:HelloResponse/ns1:CorrelationId" value="${correlationId}"/>
                        <xpath expression="//ns1:HelloResponse/ns1:Text" value="citrus:concat('Hello ', ${user})"/>
                    </validate>
                    <namespace prefix="ns1" value="http://www.consol.de/schemas/samples/sayHello.xsd"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>
            
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="//:HelloResponse/:MessageId" value="${messageId}"/>
                        <xpath expression="//:HelloResponse/:CorrelationId" value="${correlationId}"/>
                        <xpath expression="//:HelloResponse/:Text" value="citrus:concat('Hello ', ${user})"/>
                        <namespace prefix="" value="http://www.consol.de/schemas/samples/sayHello.xsd"/>
                    </validate>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>
            
            <echo>
                <message>Now using xpath validation elements</message>
            </echo>
            
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="//ns0:HelloResponse/ns0:MessageId" value="${messageId}"/>
                        <xpath expression="//ns0:HelloResponse/ns0:CorrelationId" value="${correlationId}"/>
                        <xpath expression="//ns0:HelloResponse/ns0:Text" value="citrus:concat('Hello ', ${user})"/>
                    </validate>
                    <namespace prefix="ns0" value="http://www.consol.de/schemas/samples/sayHello.xsd"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>
            
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="//ns1:HelloResponse/ns1:MessageId" value="${messageId}"/>
                        <xpath expression="//ns1:HelloResponse/ns1:CorrelationId" value="${correlationId}"/>
                        <xpath expression="//ns1:HelloResponse/ns1:Text" value="citrus:concat('Hello ', ${user})"/>
                    </validate>
                    <namespace prefix="ns1" value="http://www.consol.de/schemas/samples/sayHello.xsd"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>
            
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="//:HelloResponse/:MessageId" value="${messageId}"/>
                        <xpath expression="//:HelloResponse/:CorrelationId" value="${correlationId}"/>
                        <xpath expression="//:HelloResponse/:Text" value="citrus:concat('Hello ', ${user})"/>
                    </validate>
                    <namespace prefix="" value="http://www.consol.de/schemas/samples/sayHello.xsd"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>
            
            <echo>
                <message>Test: Default namespace mapping</message>
            </echo>
            
            <send endpoint="helloRequestSender">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>                              
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>
            
            <receive endpoint="helloResponseReceiver">
                <message>
                    <validate>
                        <xpath expression="/def:HelloResponse/def:MessageId" value="${messageId}"/>
                        <xpath expression="/def:HelloResponse/def:CorrelationId" value="${correlationId}"/>
                        <xpath expression="/def:HelloResponse/def:Text" value="citrus:concat('Hello ', ${user})"/>
                    </validate>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
                <extract>
                    <message path="/def:HelloResponse/def:Text" variable="extractedText"></message>
                </extract>
            </receive>
            
            <groovy>
                assert context.getVariable('extractedText') == 'Hello ${user}'
            </groovy>

            <echo>
              <message>Test: Validation matcher value extraction</message>
            </echo>

            <send endpoint="helloRequestSender">
              <description>
                Send asynchronous hello request: TestFramework -> HelloService
              </description>
              <message>
                <data>
                  <![CDATA[
                     <HelloRequest xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                         <MessageId>${messageId}</MessageId>
                         <CorrelationId>${correlationId}</CorrelationId>
                         <User>${user}</User>
                         <Text>Hello TestFramework</Text>
                     </HelloRequest>
                  ]]>
                </data>
              </message>
              <header>
                <element name="Operation" value="sayHello"/>
                <element name="CorrelationId" value="${correlationId}"/>
              </header>
            </send>

            <receive endpoint="helloResponseReceiver">
              <message>
                <data>
                  <![CDATA[
                      <HelloResponse xmlns="http://www.consol.de/schemas/samples/sayHello.xsd">
                         <MessageId>${messageId}</MessageId>
                         <CorrelationId>${correlationId}</CorrelationId>
                         <User>@variable('serviceName')@</User>
                         <Text>@variable('extractedText')@</Text>
                     </HelloResponse>
                  ]]>
                </data>
              </message>
              <header>
                <element name="Operation" value="@variable()@"/>
                <element name="CorrelationId" value="${correlationId}"/>
              </header>
            </receive>

            <groovy>
              assert context.getVariable('Operation') == 'sayHello'
              assert context.getVariable('serviceName') == 'HelloService'
              assert context.getVariable('extractedText') == 'Hello ${user}'
            </groovy>
        </actions>
    </testcase>
</spring:beans>